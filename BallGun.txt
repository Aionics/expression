@name BallGun
@persist Active
interval(50)
if(first()){
    E=entity()
#telo
    holoCreate(1)
    holoPos(1,E:toWorld(vec(6,0,48.5)))
    holoAng(1,E:toWorld(ang(0,0,90)))
    holoModel(1,"hq_cylinder")
    holoScale(1,vec(0.5,0.5,2)) 
    holoColor(1,vec(30))
#telo_2
    holoCreate(2)
    holoPos(2,E:toWorld(vec(-6,0,48.5)))
    holoAng(2,E:toWorld(ang(0,0,90)))
    holoModel(2,"hq_cylinder")
    holoScale(2,vec(0.5,0.5,2))
    holoColor(2,vec(30))
#telo_niz
    holoCreate(3)
    holoPos(3,E:toWorld(vec(0,-6,50)))
    holoScale(3,vec(1,1,0.25)) 
    holoColor(3,vec(30))
#telo_spina
    holoCreate(4)
    holoPos(4,E:toWorld(vec(0,-6,52.5)))
    holoScale(4,vec(0.5,0.5,0.25))
    holoColor(4,vec(30))
#telo_spina_sheya
    holoCreate(5)
    holoPos(5,E:toWorld(vec(0,-6,55)))
    holoModel(5,"hq_cylinder")
    holoScale(5,vec(0.5,0.5,1))
    holoAlpha(5,100)
#telo_spina_sheya_shar_1
    holoCreate(6)
    holoPos(6,E:toWorld(vec(0,-6,58)))
    holoModel(6,"hq_sphere")
    holoScale(6,vec(0.4))
    holoColor(6,vec(255,150,40))
#telo_spina_sheya_shar_2
    holoCreate(7)
    holoPos(7,E:toWorld(vec(0,-6,53)))
    holoModel(7,"hq_sphere")
    holoScale(7,vec(0.4))
    holoColor(7,vec(255,150,40))
#telo_spina_sheya_colco1
    holoCreate(8)
    holoScale(8,vec(0.55))
    holoPos(8,E:toWorld(vec(0,-6,61)))
    holoModel(8,"hq_torus_thin")
    holoColor(8,vec(30))
#telo_spina_sheya_colco2
    holoCreate(9)
    holoScale(9,vec(0.55))
    holoPos(9,E:toWorld(vec(0,-6,57.5)))
    holoModel(9,"hq_torus_thin")
    holoColor(9,vec(30))
#telo_spina_sheya_colco3
    holoCreate(10)
    holoScale(10,vec(0.55))
    holoPos(10,E:toWorld(vec(0,-6,54)))
    holoModel(10,"hq_torus_thin")
    holoColor(10,vec(30))
#telo_niz_2
    holoCreate(11)
    holoPos(11,E:toWorld(vec(-5,5,45)))
    holoScale(11,vec(0.25,1.5,0.5))
    holoColor(11,vec(30))
#telo_niz_3
    holoCreate(12)
    holoPos(12,E:toWorld(vec(0,-5,47)))
    holoScale(12,vec(0.7,0.7,0.5))
    holoColor(12,vec(30))

    holoCreate(13)
    holoPos(13,E:toWorld(vec(5,5,45)))
    holoScale(13,vec(0.25,1.5,0.5))
    holoColor(13,vec(30))

    holoCreate(14)
    holoPos(14,E:toWorld(vec(0,5,43.5)))
    holoScale(14,vec(1,1.5,0.25))
    holoColor(14,vec(30))
    
    holoCreate(15)
    holoPos(15,E:toWorld(vec(0,0,48)))
    holoModel(15,"hq_sphere")
    holoScale(15,vec(0.4))
    holoColor(15,vec(255,150,40))
    
    holoCreate(16)
    holoPos(16,E:toWorld(vec(0,5,48)))
    holoModel(16,"hq_sphere")
    holoScale(16,vec(0.4))
    holoColor(16,vec(255,150,40))

    holoCreate(17)
    holoPos(17,E:toWorld(vec(0,10,48)))
    holoModel(17,"hq_sphere")
    holoScale(17,vec(0.4))
    holoColor(17,vec(255,150,40))
    
    holoCreate(18)
    holoPos(18,E:toWorld(vec(0,6,48)))
    holoAng(18,E:toWorld(ang(0,0,90)))
    holoModel(18,"hq_cylinder")
    holoScale(18,vec(1.2,0.75,0.95))
    holoAlpha(18,100)
    
    holoCreate(19)
    holoPos(19,E:toWorld(vec(0,15,48)))
    holoAng(19,E:toWorld(ang(0,0,90)))
    holoModel(19,"hq_cylinder")
    holoScale(19,vec(0.5))
    holoColor(19,vec(150))
   
    holoCreate(20)
    holoPos(20,E:toWorld(vec(0,13.5,48)))
    holoScale(20,vec(0.5,0.3,0.5))
    holoColor(20,vec(30))
    
    holoCreate(21)
    holoPos(21,E:toWorld(vec(0,-10,48)))
    holoScale(21,vec(0.5,0.5,0.4))
    holoColor(21,vec(30))
 
    holoCreate(22)
    holoPos(22,E:toWorld(vec(0,-14,44)))
    holoAng(22,E:toWorld(ang(0,0,140)))  
    holoModel(22,"hq_cylinder")
    holoScale(22,vec(0.3,0.3,0.8))  
    holoColor(22,vec(30))
    
    holoCreate(23)
    holoPos(23,E:toWorld(vec(-5,-6.5,43)))
    holoAng(23,E:toWorld(ang(0,-90,120)))
    holoModel(23,"hq_cylinder")
    holoScale(23,vec(0.3,0.3,0.8)) 
    holoColor(23,vec(30))
    
    for(I=2,23){holoParent(I,1)}
    
    #[ Model by:
         __       _                _         _____
        |  \     |_|              |_|       /  __/
        | | \     _   ___  _____   _   ___   \ \
        | |\ \   | | / _ \ |    \ | | /  _|   \ \
        | |_\ \  | | ||_|| | || | | | | |_  ___/ |
        |_|  \_\ |_| \___/ |_||_| |_| \___| \____/
                      A I O N I C S
    ]#
    
}
#O=findPlayerByName("most")
O=owner()
if(changed(O:weapon())){
    if(O:weapon():type()=="weapon_physcannon"){Active=1}else{Active=0}
}

